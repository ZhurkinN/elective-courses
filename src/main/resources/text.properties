db.driver = oracle.jdbc.driver.OracleDriver
db.url = jdbc:oracle:thin:@localhost:1521:XE
db.name = system
db.password = 1234

query.role.by.id = SELECT role.role_name \
  FROM role \
  WHERE id = ?

query.user.get.by.login = SELECT users.* \
  FROM users \
  WHERE login = ?
query.user.login = UPDATE users \
  SET is_authorized = 1 \
  WHERE users.id = ?
query.user.logout = UPDATE users \
  SET is_authorized = 0 \
  WHERE users.id = ?

query.admin.get.authorized.users = SELECT users.* \
  FROM users \
  WHERE users.is_authorized = 1
query.admin.get.all.users = SELECT users.* \
  FROM users
query.admin.create.user = INSERT INTO users(login, password, role_id, name, surname, patronymic) \
  VALUES (?, ?, ?, ?, ?, ?)
query.admin.delete.user = DELETE FROM users \
  WHERE users.id = ?
query.admin.edit.user = UPDATE users \
  SET users.password = ?, users.role_id = ?, users.name = ?, users.surname = ?, users.patronymic = ? \
  WHERE users.login = ?

query.moderator.get.users = SELECT users.* \
  FROM users \
  WHERE users.is_active = 1
query.moderator.block.user = UPDATE users \
  SET users.is_active = 0 \
  WHERE users.id = ?
query.moderator.unblock.user = UPDATE users \
  SET users.is_active = 1 \
  WHERE users.id = ?
query.moderator.get.courses = SELECT * \
  FROM elective_course
query.moderator.delete.course = DELETE FROM elective_course \
  WHERE elective_course.id = ?

query.teacher.get.started.courses = SELECT elective_course.* \
  FROM elective_course \
  WHERE teacher_id = ? AND is_started = 1
query.teacher.get.not.started.courses = SELECT elective_course.* \
  FROM elective_course \
  WHERE teacher_id = ? AND is_started = 0
query.teacher.course.start = UPDATE elective_course \
  SET elective_course.is_started = 1, elective_course.start_date = CURRENT_DATE \
  WHERE elective_course.id = ?
query.teacher.course.create = INSERT INTO elective_course(teacher_id, title, description) \
  VALUES (?, ?, ?)
query.teacher.get.details = SELECT * \
  FROM course_details \
  INNER JOIN elective_course on elective_course.id = course_details.course_id \
  INNER JOIN users on course_details.student_id = users.ID \
  WHERE teacher_id = ? AND is_started = 1 \
  ORDER BY elective_course.title, users.surname
query.teacher.set.mark.final = UPDATE course_details \
  SET course_details.final_mark = ?, course_details.is_marked = 1 \
  WHERE course_details.course_id = ? AND course_details.student_id = ?
query.teacher.get.marks.intermediate = SELECT * \
  FROM intermediate_mark \
  INNER JOIN users on intermediate_mark.student_id = users.id \
  INNER JOIN elective_course on intermediate_mark.course_id = elective_course.id \
  WHERE teacher_id = ? \
  ORDER BY elective_course.title, users.surname, users.name, intermediate_mark.mark_date DESC
query.teacher.get.course.members = SELECT * \
  FROM course_details \
  INNER JOIN elective_course on elective_course.id = course_details.course_id \
  INNER JOIN users on course_details.student_id = users.id \
  WHERE teacher_id = ? AND is_marked = 0 AND is_started = 1 \
  ORDER BY title, surname, name
query.teacher.set.mark.intermediate = INSERT INTO intermediate_mark(course_id, student_id, mark, mark_date) \
  VALUES (?, ?, ?, CURRENT_DATE)
query.teacher.get.attendance = SELECT * \
  FROM attendance \
  INNER JOIN users on attendance.student_id = users.id \
  INNER JOIN elective_course on attendance.course_id = elective_course.id \
  WHERE teacher_id = ? AND is_started = 1 \
  ORDER BY elective_course.title, users.surname, users.name, attendance.lesson_number, attendance.attendance_date DESC
query.teacher.set.attendance = INSERT INTO attendance(course_id, student_id, lesson_number, is_visited, attendance_date) \
  VALUES (?, ?, ?, ?, CURRENT_DATE)
query.teacher.get.last.attendance = SELECT MAX(lesson_number) AS max \
  FROM attendance \
  WHERE attendance.student_id = ? and attendance.course_id = ?

query.student.get.courses = SELECT * \
  FROM elective_course \
  INNER JOIN course_details on elective_course.id = course_details.course_id \
  INNER JOIN users ON elective_course.teacher_id = users.id \
  WHERE course_details.student_id = ? \
  ORDER BY elective_course.title, users.surname
query.student.get.advertisements = SELECT * \
  FROM elective_course \
  INNER JOIN users on users.id = elective_course.teacher_id \
  WHERE elective_course.is_started = 0 AND elective_course.id NOT IN (SELECT elective_course.id FROM elective_course INNER JOIN course_details on elective_course.id = course_details.course_id WHERE student_id = ?) \
  ORDER BY elective_course.title, users.surname
query.student.join.course = INSERT INTO course_details(course_id, student_id) \
  VALUES (?, ?)
query.student.leave.course = UPDATE course_details \
  SET final_mark = ?, is_marked = 1 \
  WHERE student_id = ? AND course_id = ?
query.student.get.marks.info = SELECT elective_course.*, intermediate_mark.*, student.*, teacher.id AS id_1, teacher.login AS login_1, teacher.password AS password_1, teacher.role_id AS role_id_1, teacher.name AS name_1, teacher.surname AS surname_1, teacher.patronymic AS patronymic_1, teacher.is_authorized AS is_authorized_1, teacher.is_active AS is_active_1 \
  FROM intermediate_mark \
  INNER JOIN elective_course ON elective_course.id = intermediate_mark.course_id \
  INNER JOIN users student ON intermediate_mark.student_id = student.id \
  INNER JOIN users teacher ON elective_course.teacher_id = teacher.id WHERE elective_course.id IN (SELECT EC.id FROM course_details INNER JOIN elective_course EC ON EC.id = course_details.course_id WHERE student_id = ? AND is_marked = 0) \
  ORDER BY title, student.surname, student.name, mark_date DESC
query.student.get.attendance.info = SELECT elective_course.*, attendance.*, student.*, teacher.id AS id_1, teacher.login AS login_1, teacher.password AS password_1, teacher.role_id AS role_id_1, teacher.name AS name_1, teacher.surname AS surname_1, teacher.patronymic AS patronymic_1, teacher.is_authorized AS is_authorized_1, teacher.is_active AS is_active_1 \
  FROM attendance \
  INNER JOIN elective_course ON elective_course.id = attendance.course_id \
  INNER JOIN users student ON attendance.student_id = student.id \
  INNER JOIN users teacher ON elective_course.teacher_id = teacher.id \
  WHERE elective_course.id IN (SELECT EC.id FROM course_details INNER JOIN elective_course EC ON EC.id = course_details.course_id WHERE student_id = ? AND is_marked = 0) \
  ORDER BY title, student.surname, student.name, attendance_date DESC